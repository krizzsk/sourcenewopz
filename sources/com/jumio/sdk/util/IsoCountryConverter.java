package com.jumio.sdk.util;

import com.didi.dcrypto.util.DCryptoUtils;
import com.didi.dcrypto.util.network.NetworkConstants;
import com.didi.map.setting.common.MapSettingNavConstant;
import com.didi.sdk.sidebar.history.HistoryRecordFragment;
import com.didi.sdk.util.GlobalCountryCode;
import com.google.zxing.client.result.ExpandedProductParsedResult;
import com.tunasashimi.tuna.TunaView;
import java.util.LinkedHashMap;
import java.util.Map;
import kotlin.Metadata;
import kotlin.TuplesKt;
import kotlin.collections.CollectionsKt;
import kotlin.collections.MapsKt;
import kotlin.jvm.JvmStatic;
import kotlin.jvm.internal.Intrinsics;

@Metadata(mo175976bv = {1, 0, 3}, mo175977d1 = {"\u0000\u0010\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\u0010\u000e\n\u0002\b\u0007\bÆ\u0002\u0018\u00002\u00020\u0001B\t\b\u0002¢\u0006\u0004\b\u0007\u0010\bJ\u0014\u0010\u0004\u001a\u0004\u0018\u00010\u00022\b\u0010\u0003\u001a\u0004\u0018\u00010\u0002H\u0007J\u0014\u0010\u0006\u001a\u0004\u0018\u00010\u00022\b\u0010\u0005\u001a\u0004\u0018\u00010\u0002H\u0007¨\u0006\t"}, mo175978d2 = {"Lcom/jumio/sdk/util/IsoCountryConverter;", "", "", "alpha3Code", "convertToAlpha2", "alpha2Code", "convertToAlpha3", "<init>", "()V", "jumio-core_release"}, mo175979k = 1, mo175980mv = {1, 5, 1})
/* compiled from: IsoCountryConverter.kt */
public final class IsoCountryConverter {
    public static final IsoCountryConverter INSTANCE = new IsoCountryConverter();

    /* renamed from: a */
    public static final Map<String, String> f55129a = MapsKt.mapOf(TuplesKt.m42317to("AFG", "AF"), TuplesKt.m42317to("ALA", "AX"), TuplesKt.m42317to("ALB", "AL"), TuplesKt.m42317to("DZA", "DZ"), TuplesKt.m42317to("ASM", "AS"), TuplesKt.m42317to("AND", "AD"), TuplesKt.m42317to("AGO", "AO"), TuplesKt.m42317to("AIA", "AI"), TuplesKt.m42317to("ATA", "AQ"), TuplesKt.m42317to("ATG", "AG"), TuplesKt.m42317to("ARG", HistoryRecordFragment.COUNTRY_CODE_AR), TuplesKt.m42317to("ARM", "AM"), TuplesKt.m42317to("ABW", "AW"), TuplesKt.m42317to("AUS", "AU"), TuplesKt.m42317to("AUT", GlobalCountryCode.AUSTRIA), TuplesKt.m42317to("AZE", "AZ"), TuplesKt.m42317to("BHS", "BS"), TuplesKt.m42317to("BHR", "BH"), TuplesKt.m42317to("BGD", "BD"), TuplesKt.m42317to("BRB", "BB"), TuplesKt.m42317to("BLR", "BY"), TuplesKt.m42317to("BEL", GlobalCountryCode.BELGIUM), TuplesKt.m42317to("BLZ", "BZ"), TuplesKt.m42317to("BEN", "BJ"), TuplesKt.m42317to("BMU", "BM"), TuplesKt.m42317to("BTN", "BT"), TuplesKt.m42317to("BOL", "BO"), TuplesKt.m42317to("BES", "BQ"), TuplesKt.m42317to("BIH", "BA"), TuplesKt.m42317to("BWA", "BW"), TuplesKt.m42317to("BVT", "BV"), TuplesKt.m42317to("BRA", "BR"), TuplesKt.m42317to("IOT", "IO"), TuplesKt.m42317to("BRN", "BN"), TuplesKt.m42317to("BGR", GlobalCountryCode.BULGARIA), TuplesKt.m42317to("BFA", "BF"), TuplesKt.m42317to("BDI", "BI"), TuplesKt.m42317to("KHM", "KH"), TuplesKt.m42317to("CMR", "CM"), TuplesKt.m42317to("CAN", GlobalCountryCode.CANADA), TuplesKt.m42317to("CPV", "CV"), TuplesKt.m42317to("CYM", "KY"), TuplesKt.m42317to("CAF", "CF"), TuplesKt.m42317to("TCD", "TD"), TuplesKt.m42317to("CHL", HistoryRecordFragment.COUNTRY_CODE_CL), TuplesKt.m42317to("CHN", GlobalCountryCode.CHINA), TuplesKt.m42317to("CXR", "CX"), TuplesKt.m42317to("CCK", "CC"), TuplesKt.m42317to("COL", HistoryRecordFragment.COUNTRY_CODE_CO), TuplesKt.m42317to("COM", "KM"), TuplesKt.m42317to("COG", "CG"), TuplesKt.m42317to("COD", "CD"), TuplesKt.m42317to("COK", "CK"), TuplesKt.m42317to("CRI", HistoryRecordFragment.COUNTRY_CODE_CR), TuplesKt.m42317to("CIV", "CI"), TuplesKt.m42317to("HRV", GlobalCountryCode.CROATIA), TuplesKt.m42317to("CUB", "CU"), TuplesKt.m42317to("CUW", "CW"), TuplesKt.m42317to("CYP", GlobalCountryCode.CYPRUS), TuplesKt.m42317to("CZE", GlobalCountryCode.CZECH_REPUBLIC), TuplesKt.m42317to("DNK", GlobalCountryCode.DENMARK), TuplesKt.m42317to("DJI", "DJ"), TuplesKt.m42317to("DMA", "DM"), TuplesKt.m42317to("DOM", HistoryRecordFragment.COUNTRY_CODE_DO), TuplesKt.m42317to("ECU", "EC"), TuplesKt.m42317to("EGY", "EG"), TuplesKt.m42317to("SLV", "SV"), TuplesKt.m42317to("GNQ", "GQ"), TuplesKt.m42317to("ERI", "ER"), TuplesKt.m42317to("EST", GlobalCountryCode.ESTONIA), TuplesKt.m42317to(NetworkConstants.CURRENCY_ETH, "ET"), TuplesKt.m42317to("FLK", "FK"), TuplesKt.m42317to("FRO", "FO"), TuplesKt.m42317to("FJI", "FJ"), TuplesKt.m42317to("FIN", GlobalCountryCode.FINLAND), TuplesKt.m42317to("FRA", GlobalCountryCode.FRANCE), TuplesKt.m42317to("GUF", "GF"), TuplesKt.m42317to("PYF", "PF"), TuplesKt.m42317to("ATF", "TF"), TuplesKt.m42317to("GAB", "GA"), TuplesKt.m42317to("GMB", "GM"), TuplesKt.m42317to("GEO", "GE"), TuplesKt.m42317to("DEU", GlobalCountryCode.GERMANY), TuplesKt.m42317to("GHA", "GH"), TuplesKt.m42317to("GIB", "GI"), TuplesKt.m42317to("GRC", GlobalCountryCode.GREECE), TuplesKt.m42317to("GRL", "GL"), TuplesKt.m42317to("GRD", "GD"), TuplesKt.m42317to("GLP", "GP"), TuplesKt.m42317to("GUM", "GU"), TuplesKt.m42317to("GTM", "GT"), TuplesKt.m42317to("GGY", "GG"), TuplesKt.m42317to("GIN", "GN"), TuplesKt.m42317to("GNB", "GW"), TuplesKt.m42317to("GUY", "GY"), TuplesKt.m42317to("HTI", "HT"), TuplesKt.m42317to("HMD", "HM"), TuplesKt.m42317to("VAT", "VA"), TuplesKt.m42317to("HND", "HN"), TuplesKt.m42317to("HKG", "HK"), TuplesKt.m42317to("HUN", GlobalCountryCode.HUNGARY), TuplesKt.m42317to("ISL", "IS"), TuplesKt.m42317to("IND", "IN"), TuplesKt.m42317to("IDN", "ID"), TuplesKt.m42317to("IRN", "IR"), TuplesKt.m42317to("IRQ", "IQ"), TuplesKt.m42317to("IRL", GlobalCountryCode.IRELAND), TuplesKt.m42317to("IMN", "IM"), TuplesKt.m42317to("ISR", "IL"), TuplesKt.m42317to("ITA", GlobalCountryCode.ITALY), TuplesKt.m42317to("JAM", "JM"), TuplesKt.m42317to("JPN", "JP"), TuplesKt.m42317to("JEY", "JE"), TuplesKt.m42317to("JOR", "JO"), TuplesKt.m42317to("KAZ", MapSettingNavConstant.MAP_COUNTRY_CODE_KAZAKHSTAN), TuplesKt.m42317to("KEN", "KE"), TuplesKt.m42317to("KIR", "KI"), TuplesKt.m42317to("PRK", "KP"), TuplesKt.m42317to("KOR", "KR"), TuplesKt.m42317to("KWT", "KW"), TuplesKt.m42317to("KGZ", ExpandedProductParsedResult.KILOGRAM), TuplesKt.m42317to("LAO", "LA"), TuplesKt.m42317to("LVA", GlobalCountryCode.LATVIA), TuplesKt.m42317to("LBN", ExpandedProductParsedResult.POUND), TuplesKt.m42317to("LSO", "LS"), TuplesKt.m42317to("LBR", "LR"), TuplesKt.m42317to("LBY", "LY"), TuplesKt.m42317to("LIE", "LI"), TuplesKt.m42317to("LTU", GlobalCountryCode.LITHUANIA), TuplesKt.m42317to("LUX", GlobalCountryCode.LUXEMBOURG), TuplesKt.m42317to("MAC", "MO"), TuplesKt.m42317to("MKD", "MK"), TuplesKt.m42317to("MDG", "MG"), TuplesKt.m42317to("MWI", "MW"), TuplesKt.m42317to("MYS", "MY"), TuplesKt.m42317to("MDV", "MV"), TuplesKt.m42317to("MLI", "ML"), TuplesKt.m42317to("MLT", GlobalCountryCode.MALTA), TuplesKt.m42317to("MHL", "MH"), TuplesKt.m42317to("MTQ", "MQ"), TuplesKt.m42317to("MRT", "MR"), TuplesKt.m42317to("MUS", "MU"), TuplesKt.m42317to("MYT", "YT"), TuplesKt.m42317to("MEX", "MX"), TuplesKt.m42317to("FSM", "FM"), TuplesKt.m42317to("MDA", "MD"), TuplesKt.m42317to("MCO", "MC"), TuplesKt.m42317to("MNG", "MN"), TuplesKt.m42317to("MNE", "ME"), TuplesKt.m42317to("MSR", "MS"), TuplesKt.m42317to("MAR", "MA"), TuplesKt.m42317to("MOZ", "MZ"), TuplesKt.m42317to("MMR", "MM"), TuplesKt.m42317to("NAM", "NA"), TuplesKt.m42317to("NRU", "NR"), TuplesKt.m42317to("NPL", "NP"), TuplesKt.m42317to("NLD", GlobalCountryCode.NETHERLANDS), TuplesKt.m42317to("ANT", "AN"), TuplesKt.m42317to("NCL", "NC"), TuplesKt.m42317to("NZL", HistoryRecordFragment.COUNTRY_CODE_NZ), TuplesKt.m42317to("NIC", "NI"), TuplesKt.m42317to("NER", "NE"), TuplesKt.m42317to("NGA", "NG"), TuplesKt.m42317to("NIU", "NU"), TuplesKt.m42317to("NFK", "NF"), TuplesKt.m42317to("MNP", "MP"), TuplesKt.m42317to("NOR", DCryptoUtils.KEY_IP_BLOCKING_STATUS_UNBLOCK), TuplesKt.m42317to("OMN", "OM"), TuplesKt.m42317to("PAK", "PK"), TuplesKt.m42317to("PLW", "PW"), TuplesKt.m42317to("PSE", "PS"), TuplesKt.m42317to("PAN", HistoryRecordFragment.COUNTRY_CODE_PA), TuplesKt.m42317to(TunaView.GRAPHICSTYPE_PNG, "PG"), TuplesKt.m42317to("PRY", "PY"), TuplesKt.m42317to("PER", HistoryRecordFragment.COUNTRY_CODE_PE), TuplesKt.m42317to("PHL", "PH"), TuplesKt.m42317to("PCN", "PN"), TuplesKt.m42317to("POL", GlobalCountryCode.POLAND), TuplesKt.m42317to("PRT", GlobalCountryCode.PORTUGAL), TuplesKt.m42317to("PRI", HistoryRecordFragment.COUNTRY_CODE_PR), TuplesKt.m42317to("QAT", "QA"), TuplesKt.m42317to("REU", "RE"), TuplesKt.m42317to("ROU", GlobalCountryCode.RUMANIA), TuplesKt.m42317to("RUS", MapSettingNavConstant.MAP_COUNTRY_CODE_RUSSIA), TuplesKt.m42317to("RWA", "RW"), TuplesKt.m42317to("BLM", "BL"), TuplesKt.m42317to("SHN", "SH"), TuplesKt.m42317to("KNA", "KN"), TuplesKt.m42317to("LCA", "LC"), TuplesKt.m42317to("MAF", "MF"), TuplesKt.m42317to("SPM", "PM"), TuplesKt.m42317to("VCT", "VC"), TuplesKt.m42317to("WSM", "WS"), TuplesKt.m42317to("SMR", "SM"), TuplesKt.m42317to("STP", "ST"), TuplesKt.m42317to("SAU", "SA"), TuplesKt.m42317to("SEN", "SN"), TuplesKt.m42317to("SSD", "SS"), TuplesKt.m42317to("SRB", "RS"), TuplesKt.m42317to("SYC", "SC"), TuplesKt.m42317to("SLE", "SL"), TuplesKt.m42317to("SGP", "SG"), TuplesKt.m42317to("SXM", "SX"), TuplesKt.m42317to("SVK", GlobalCountryCode.SLOVAKIA), TuplesKt.m42317to("SVN", GlobalCountryCode.SLOVENIA), TuplesKt.m42317to("SLB", "SB"), TuplesKt.m42317to("SOM", "SO"), TuplesKt.m42317to("ZAF", HistoryRecordFragment.COUNTRY_CODE_ZA), TuplesKt.m42317to("SGS", "GS"), TuplesKt.m42317to("ESP", GlobalCountryCode.SPAIN), TuplesKt.m42317to("LKA", "LK"), TuplesKt.m42317to("SDN", "SD"), TuplesKt.m42317to("SUR", "SR"), TuplesKt.m42317to("SJM", "SJ"), TuplesKt.m42317to("SWZ", "SZ"), TuplesKt.m42317to("SWE", GlobalCountryCode.SWEDEN), TuplesKt.m42317to("CHE", "CH"), TuplesKt.m42317to("SYR", "SY"), TuplesKt.m42317to("TWN", "TW"), TuplesKt.m42317to("TJK", "TJ"), TuplesKt.m42317to("TZA", "TZ"), TuplesKt.m42317to("THA", "TH"), TuplesKt.m42317to("TLS", "TL"), TuplesKt.m42317to("TGO", "TG"), TuplesKt.m42317to("TKL", "TK"), TuplesKt.m42317to("TON", "TO"), TuplesKt.m42317to("TTO", "TT"), TuplesKt.m42317to("TUN", "TN"), TuplesKt.m42317to("TUR", "TR"), TuplesKt.m42317to("TKM", "TM"), TuplesKt.m42317to("TCA", "TC"), TuplesKt.m42317to("TUV", "TV"), TuplesKt.m42317to("UGA", "UG"), TuplesKt.m42317to("UKR", "UA"), TuplesKt.m42317to("ARE", "AE"), TuplesKt.m42317to("GBR", GlobalCountryCode.ENGLAND), TuplesKt.m42317to("USA", GlobalCountryCode.AMERICA), TuplesKt.m42317to("UMI", "UM"), TuplesKt.m42317to("URY", "UY"), TuplesKt.m42317to("UZB", "UZ"), TuplesKt.m42317to("VUT", "VU"), TuplesKt.m42317to("VEN", "VE"), TuplesKt.m42317to("VNM", "VN"), TuplesKt.m42317to("VGB", "VG"), TuplesKt.m42317to("VIR", "VI"), TuplesKt.m42317to("WLF", "WF"), TuplesKt.m42317to("ESH", "EH"), TuplesKt.m42317to("XKX", "XK"), TuplesKt.m42317to("YEM", "YE"), TuplesKt.m42317to("ZMB", "ZM"), TuplesKt.m42317to("ZWE", "ZW"));

    @JvmStatic
    public static final String convertToAlpha2(String str) {
        if (str == null) {
            return null;
        }
        Map<String, String> map = f55129a;
        if (map.containsKey(str)) {
            return map.get(str);
        }
        return null;
    }

    @JvmStatic
    public static final String convertToAlpha3(String str) {
        if (str == null) {
            return null;
        }
        Map<String, String> map = f55129a;
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        for (Map.Entry next : map.entrySet()) {
            if (Intrinsics.areEqual((Object) (String) next.getValue(), (Object) str)) {
                linkedHashMap.put(next.getKey(), next.getValue());
            }
        }
        return (String) CollectionsKt.firstOrNull(linkedHashMap.keySet());
    }
}
